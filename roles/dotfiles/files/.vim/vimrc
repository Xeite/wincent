if v:progname == 'vi'
  set noloadplugins
endif

let mapleader=","
let maplocalleader="\\"

" Easy editing of VIMRC
nnoremap <Leader>v :sp $MYVIMRC<cr>
nnoremap <Leader>r :source $MYVIMRC<cr>

" Remap ESC
inoremap jk <ESC>
inoremap <ESC> <Nop>

" Reamp tag search
nnoremap <C-y> <C-]>
nnoremap <C-]> <Nop>

" Extension -> filetype mappings.
let filetype_m='objc'
let filetype_pl='prolog'

" Stop annoying paren match highlighting from flashing all over the screen.
let loaded_matchparen=1

" Automatic, language-dependent indentation, syntax coloring and other
" functionality.
filetype indent plugin on
syntax on

source $VIMRUNTIME/macros/matchit.vim

" Stark highlighting is enough to see the current match; don't need the
" centering, which can be annoying.
let g:LoupeCenterResults=0

" Would be useful mappings, but they interfe with my default window movement
" bindings (<C-j> and <C-k>).
let g:NERDTreeMapJumpPrevSibling='<Nop>'
let g:NERDTreeMapJumpNextSibling='<Nop>'

" Prevent tcomment from making a zillion mappings (we just want the operator).
let g:tcommentMapLeader1=''
let g:tcommentMapLeader2=''
let g:tcommentMapLeaderCommentAnyway=''
let g:tcommentTextObjectInlineComment=''

" The default (g<) is a bit awkward to type.
let g:tcommentMapLeaderUncommentAnyway='gu'

" Use global tags
set cscopetag
let g:GtagsCscope_Auto_Load = 1
let g:GtagsCscope_Auto_Map = 1
let g:GtagsCscope_Quiet = 1

" Allow for per-machine overrides in ~/.vim/host/hostname and
" ~/.vim/vimrc.local.
let s:hostfile = $HOME . '/.vim/host/' . substitute(hostname(), "\\..*", '', '')
if filereadable(s:hostfile)
  execute 'source ' . s:hostfile
endif

" Inglorious hack to share config across dev* machines.
if matchstr(hostname(), '\v^dev(vm)?\d+\.') != ''
  execute 'source ' . $HOME . '/.vim/host/dev-star'
endif

let s:vimrc_local = $HOME . '/.vim/vimrc.local'
if filereadable(s:vimrc_local)
  execute 'source ' . s:vimrc_local
endif

" Temporary workaround for MacVim blowing up for any Python plug-in.
if has('gui')
  let g:pathogen_blacklist=['YouCompleteMe', 'ultisnips']
endif

if &loadplugins
  if has('packages')
    packloadall
  else
    " Use Vundle for plug-in loading.
    set rtp+=~/.vim/bundle/Vundle.vim
    call vundle#begin()
    call vundle#end()
    filetype plugin indent on
  endif
endif

" After this file is sourced, plug-in code will be evaluated.
" See ~/.vim/after for files evaluated after that.
" See `:scriptnames` for a list of all scripts, in evaluation order.
" Launch Vim with `vim --startuptime vim.log` for profiling info.
"
" To see all leader mappings, including those from plug-ins:
"
"   vim -c 'set t_te=' -c 'set t_ti=' -c 'map <space>' -c q | sort
